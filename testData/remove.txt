method[row]	node	parent	height	start.x	start.y	end.x	end.y	content
remove[486]	0	-1	0	496	8	496	26	first-statement@rangeCheck(index);
remove[486]	1	-1	0	505	8	505	35	after-branch@elementData[--size]=null;
remove[486]	2	-1	0	502	8	504	39	if-statement@if (numMoved > 0) System.arraycopy(elementData,index + 1,elementData,index,numMoved);
remove[486]	3	2	1	503	12	504	39	then-body@System.arraycopy(elementData,index + 1,elementData,index,numMoved);
remove[486]	4	-1	0	507	8	507	24	return@return oldValue;
remove[510]	5	-1	0	537	8	537	21	after-branch@return false;
remove[510]	6	-1	0	524	8	536	9	if-statement@if (o == null) {
remove[510]	7	6	1	525	12	529	17	then-body@for (int index=0; index < size; index++) if (elementData[index] == null) {
remove[510]	8	6	1	531	12	535	17	else-body@for (int index=0; index < size; index++) if (o.equals(elementData[index])) {
remove[510]	7	6	1	525	12	529	17	for-statement@for (int index=0; index < size; index++) if (elementData[index] == null) {
remove[510]	9	7	2	525	32	525	44	for-condition@index < size
remove[510]	10	7	2	526	16	529	17	for-body@if (elementData[index] == null) {
remove[510]	11	7	2	525	46	525	53	for-update@index++
remove[510]	10	7	2	526	16	529	17	if-statement@if (elementData[index] == null) {
remove[510]	12	10	3	527	20	527	38	then-body@fastRemove(index);
remove[510]	13	10	3	528	20	528	32	return@return true;
remove[510]	8	6	1	531	12	535	17	for-statement@for (int index=0; index < size; index++) if (o.equals(elementData[index])) {
remove[510]	14	8	2	531	32	531	44	for-condition@index < size
remove[510]	15	8	2	532	16	535	17	for-body@if (o.equals(elementData[index])) {
remove[510]	16	8	2	531	46	531	53	for-update@index++
remove[510]	15	8	2	532	16	535	17	if-statement@if (o.equals(elementData[index])) {
remove[510]	17	15	3	533	20	533	38	then-body@fastRemove(index);
remove[510]	18	15	3	534	20	534	32	return@return true;
remove[510]	5	-1	0	537	8	537	21	return@return false;